//Colors 
$blue: #3B698C; //"Astril"
$blue-light: #A3DEF9; //"Columbia Blue
$green: #96D4CA; //"Pale Robins Egg Blue
$yellow: #F1EF8F; //"Jonquil"

$grey: #616162; //"Storm Dust"

$black: black;
$charcoal: #3A3B3D;

$light-grey: #EEEEEE;
$super-light-grey: #FBFBFB;

$screen-sm-min: 60em;

@mixin link-no-border {
    background: none;
    
    &:hover {
        background: none;
    }
}

/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin shadow($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);  
  }
}

/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}